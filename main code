#include <iostream>
#include <string> // Fixed header
#include "Account.h"
#include "User.h"
#include "CheckingAccount.h"
#include "SavingAccount.h"
#include "Transaction.h"
#include "CcStatement.h" // Assuming typo fixed in filename
using namespace std;

Account A1(1000, 1, "John");
double DATE = 20240403;
double PAY;

int main() { // Added a main function to wrap the code
    int n = 0;
    do {
        cout << "1. View Account Info" << endl
             << "2. Deposit" << endl
             << "3. Withdraw" << endl
             << "4.View Checking Account Info" << endl
             << "5. Withdraw from Saving Account" << endl
             << "6. Record Transaction" << endl
             << "7. View Credit Card Statement" << endl;
        cout << "Please enter a number: ";
        cin >> n;
        cout << endl;

        if (n == 1) {
            A1.print();
        } else if (n == 2) {
            double DEP;
            cout << "How much would you like to deposit? " << endl;
            cin >> DEP;
            A1.Deposit(DEP);
            cout << endl << "$" << DEP << " has been deposited" << endl;
        } else if (n == 3) {
            double WIT;
            cout << "How much would you like to withdraw? " << endl;
            cin >> WIT;
            A1.Withdraw(WIT);
            cout << endl << "$" << WIT << " has been withdrawn" << endl;
        } else if (n == 4) {
            // Code for viewing checking account info
        } else if (n == 5) {
            // Code for withdrawing from saving account
        } else if (n == 6) {
            cout << "What is the amount paid?" << endl;
            cin >> PAY;
            Transaction T1(DATE, PAY);
            T1.Payment(); // Assuming Payment is a valid method for the Transaction class
            cout << "The transaction of $" << PAY << " has been recorded" << endl;
        } else if (n == 7) {
            // Code for viewing credit card statement
        } else {
            cout << "Invalid selection. Please try again." << endl;
        }
    } while (n < 1 || n > 7); // Keep prompting until a valid action is selected

    return 0;
}
